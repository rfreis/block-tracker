# Generated by Django 4.1.1 on 2022-10-19 14:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocol_type', models.IntegerField(choices=[(1, 'Bitcoin'), (90001, 'Bitcoin (Testnet)')])),
                ('hash', models.CharField(db_index=True, max_length=255)),
                ('is_change', models.BooleanField(default=False)),
                ('index', models.IntegerField(blank=True, null=True)),
                ('details', models.JSONField(default=dict)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ExtendedPublicKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hash', models.CharField(max_length=255)),
                ('protocol_type', models.IntegerField(choices=[(1, 'Bitcoin'), (90001, 'Bitcoin (Testnet)')])),
                ('details', models.JSONField(default=dict)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('wallet_type', models.IntegerField(choices=[(1, 'Extended Public Key'), (2, 'Address')])),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_wallet', to='wallet.address')),
                ('extended_public_key', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_wallet', to='wallet.extendedpublickey')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_wallet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.AddConstraint(
            model_name='extendedpublickey',
            constraint=models.UniqueConstraint(fields=('hash', 'protocol_type'), name='extended_public_key_unique'),
        ),
        migrations.AddField(
            model_name='address',
            name='extended_public_key',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='address', to='wallet.extendedpublickey'),
        ),
        migrations.AddConstraint(
            model_name='userwallet',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('address__isnull', False), ('extended_public_key__isnull', True), ('wallet_type', 2)), models.Q(('address__isnull', True), ('extended_public_key__isnull', False), ('wallet_type', 1)), _connector='OR'), name='user_wallet_wallet_type'),
        ),
        migrations.AddConstraint(
            model_name='userwallet',
            constraint=models.UniqueConstraint(condition=models.Q(('wallet_type', 2)), fields=('user', 'address'), name='user_wallet_address_unique'),
        ),
        migrations.AddConstraint(
            model_name='userwallet',
            constraint=models.UniqueConstraint(condition=models.Q(('wallet_type', 1)), fields=('user', 'extended_public_key'), name='user_wallet_extended_public_key_unique'),
        ),
        migrations.AddConstraint(
            model_name='address',
            constraint=models.UniqueConstraint(fields=('hash', 'protocol_type'), name='address_unique'),
        ),
    ]
